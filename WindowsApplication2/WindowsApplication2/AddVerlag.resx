<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        +zHnJ036FyHzK+cepw9aAAAAAElFTkSuQmCC
</value>
  </data>
</root>